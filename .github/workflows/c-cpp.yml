name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Doxygen job: Extract documentation from source files.
  job-doxygen:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    # Assume doxygen is already installed.
    # Add a step to install Doxygen
    #- name: Install Doxygen
    #  run: |
    #    choco install doxygen.portable -y
    #    set PATH="/c/tools/doxygen:$PATH"
    # Add a step to generate documentation using Doxygen
    - name: Generate Documentation
      run: doxygen Doxyfile
      #run: doxygen -g
       
  # Build job: Make executable from source using Makefile.
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check Chocolatey Installation
        run: choco --version
      - name: Install build tools and build
        shell: bash
        run: |
          choco install make
          make --version
          cd build-tools/strawberryperl/c/bin
          export PATH="$PWD:$PATH"
          echo "Updated PATH: $PATH"
          cd $GITHUB_WORKSPACE
          make all
          make check
          make distcheck
          make test

  # Run the game (Unfinished; since game will not quit itself!).
  # TODO: Run game with command line arguments that run tests, then quits the game.
  rungame:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Game
        run: |
          main.exe
  
  # Coverage job: Upload coverage reports somewhere.
  coverage:
    #if: ${{ always() }} # always run this job even if previous jobs failed.
    #needs: build # run this job after "build" job has finished.
    runs-on: windows-latest
    steps:
    #- name: Coveralls
    #  uses: coverallsapp/github-action@v2
    #  env:
    #    github-token: ${{ secrets.COVERALLS_REPO_TOKEN }}
    - name: Codecov (faulty)
      uses: codecov/codecov-action@v3
      env:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverage/*.c.txt
    - run: |
        cd $GITHUB_WORKSPACE
        cd coverage/
        echo %cd%
        codecov.exe -B main -f coverage/*.c.txt -t abcdef
        codecov.exe -B main -f %files% -t %token%
    
