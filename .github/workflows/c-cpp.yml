name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Doxygen job: Extract documentation from source files.
  job-doxygen:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    # Add a step to install Doxygen
    - name: Install Doxygen
      run: |
        choco install doxygen.portable -y
        set PATH="/c/tools/doxygen:$PATH"
    # Add a step to generate documentation using Doxygen
    - name: Generate Documentation
      #run: doxygen Doxyfile
      run: doxygen -g

  # Install build tools.
  buildtools:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: get build tools
      run: git clone "https://github.com/737BassTP/COSC345-Game"
    - name: unzip build tools
      run: |
        cd COSC345-Game/build-tools
        tar -xf strawberryperl.zip
        dir
    - name: install build tools
      run: |
        cd COSC345-Game/build-tools/c/bin
        setx /M PATH "%cd%;%PATH%"
        $env:PATH
        cmd
        echo %PATH%
  
  # Build job: Make executable from source using Makefile.
  build:
    needs: buildtools # important!
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Print build tool versions
      run: |
        gcc --version
        make -v
        mingw32-make -v
    - name: Run make.
      run: make all
    - name: Run tests (make check).
      run: make check
    - name: Run ? (make distcheck).
      run: make distcheck
  
  # Codecov job: Run CodeCov.
  codecov:
    if: ${{ always() }} # always run this job even if previous jobs failed.
    needs: build # run this job after "build" job has finished.
    runs-on: windows-latest
    steps:
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
