var examples =
[
    [ "(double from, double to, double percentage)", "lerp-example.html", null ],
    [ "(int r, int g, int b)", "make_color_rgb-example.html", null ],
    [ "(int h, int s, int v)", "make_color_hsv-example.html", null ],
    [ "()", "draw_get_alpha-example.html", null ],
    [ "()", "draw_get_color-example.html", null ],
    [ "(SDL_Renderer *renderer, int bgr)", "draw_set_color-example.html", null ],
    [ "(SDL_Renderer *renderer, int alpha)", "draw_set_alpha-example.html", null ],
    [ "(SDL_Renderer *renderer, int bgr)", "draw_clear-example.html", null ],
    [ "(SDL_Renderer *renderer, int bgr, int alpha)", "draw_clear_alpha-example.html", null ],
    [ "(SDL_Renderer *renderer, int x1, int y1, int x2, int y2)", "draw_rectangle-example.html", null ],
    [ "(SDL_Renderer *renderer, int x1, int y1, int x2, int y2, int bgr)", "draw_rectangle_color-example.html", null ],
    [ "(SDL_Renderer *renderer, int x1, int y1, int x2, int y2, SDL_Texture *texture)", "draw_image-example.html", null ],
    [ "(SDL_Renderer *renderer, int x, int y, int w, int h, SDL_Texture *font, char *str, int fontw, int fonth)", "draw_text-example.html", null ],
    [ "(SDL_Renderer *renderer, int x, int y, int w, int h, SDL_Texture *font, char *str, int fontw, int fonth, int color)", "draw_text_color-example.html", null ],
    [ "(FILE *fil)", "file_get_size-example.html", null ],
    [ "(int *keyid, int keyval)", "keyboard_set_new-example.html", null ],
    [ "(int *keyid)", "keyboard_set_old-example.html", null ],
    [ "(int key)", "keyboard_check-example.html", null ],
    [ "(int key)", "keyboard_check_pressed-example.html", null ],
    [ "(int key)", "keyboard_check_released-example.html", null ],
    [ "(int nth,...)", "mux_int-example.html", null ],
    [ "(int nth,...)", "mux_str-example.html", null ],
    [ "(int nth,...)", "mux_sdltex-example.html", null ],
    [ "(int num, int val,...)", "pos_int-example.html", null ],
    [ "(int val, int nth)", "_b_g-example.html", null ],
    [ "(int val, int size, int nth)", "_b_g_g-example.html", null ],
    [ "(int v)", "sqr-example.html", null ],
    [ "(int num,...)", "int-example.html", null ],
    [ "(double deg)", "degtorad-example.html", null ],
    [ "(double rad)", "radtodeg-example.html", null ],
    [ "(double deg)", "dcos-example.html", null ],
    [ "()", "get_timer-example.html", null ],
    [ "(int px, int py, int rx1, int ry1, int rx2, int ry2)", "point_in_rectangle-example.html", null ],
    [ "(int sx1, int sy1, int sx2, int sy2, int dx1, int dy1, int dx2, int dy2)", "rectangle_in_rectangle-example.html", null ],
    [ "(char *substr, char *str)", "string_pos-example.html", null ],
    [ "(int y, int x)", "darctan2-example.html", null ],
    [ "(int x, int y)", "cartodir-example.html", null ],
    [ "(int lvl, int lvlmax)", "game_level_load-example.html", null ],
    [ "(byte arr[], struct gameobject Objects[], int level, int siz)", "level_load_objects-example.html", null ],
    [ "(byte arr[], int siz, int count, int layers)", "level_load-example.html", null ],
    [ "(int level, int pos)", "level_load_door-example.html", null ],
    [ "(byte arr[])", "dev_tiled_to_leveldata-example.html", null ],
    [ "(int lvl, char *ret)", "level_get_name-example.html", null ],
    [ "(float x1, float y1, float x2, float y2)", "distance-example.html", null ],
    [ "(SDL_Rect rect1, SDL_Rect rect2)", "check_collision-example.html", null ]
];